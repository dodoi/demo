<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.dodoi</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<parent>
		<groupId>com.jingoal.tool</groupId>
		<artifactId>maven-build-parent</artifactId>
		<version>2.0.0-SNAPSHOT</version>
	</parent>
	
	<!-- 
	<name>demo</name>
	<url>http://maven.apache.org</url>
	 -->


	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<spring.version>4.2.5.RELEASE</spring.version>
		<junit.version>4.12</junit.version>
		<mybatis.version>3.2.3</mybatis.version>
		<mybatis.spring.version>1.2.1</mybatis.spring.version>
		<commons.lang.version>3.2.1</commons.lang.version>
		<commons.configuration.version>1.10</commons.configuration.version>
		<commons.beanutils.version>1.8.3</commons.beanutils.version>
		<commons.collections.version>3.2.1</commons.collections.version>
		<commons-httpclient.version>3.1</commons-httpclient.version>
		<httpclient.version>4.3.3</httpclient.version>
		<poi.version>3.10-FINAL</poi.version>
		<json-lib.version>2.3</json-lib.version>
		<aspectjweaver.version>1.7.4</aspectjweaver.version>
		<com.alibaba.version>1.1.22</com.alibaba.version>
		<junit.version>4.11</junit.version>
		<quartz.version>2.2.1</quartz.version>
		<hamcrest.core.version>1.3</hamcrest.core.version>
		<mockito.core.version>1.10.19</mockito.core.version>
		<jackson-mapper.version>1.9.4</jackson-mapper.version>
		<jackson-core.version>2.5.2</jackson-core.version>
		<jackson-databind.version>2.5.1</jackson-databind.version>
		<org.projectreactor.version>1.1.6.RELEASE</org.projectreactor.version>
		<reactor-tcp.version>1.0.1.RELEASE</reactor-tcp.version>
		<javax.servlet.jsp-api.version>2.3.1</javax.servlet.jsp-api.version>
		<javax.servlet-api.version>3.1.0</javax.servlet-api.version>
		<javax.servlet.version>1.2</javax.servlet.version>
		<jsp.api.version>2.0</jsp.api.version>
		<taglibs.version>1.1.2</taglibs.version>
		<xstream.version>1.4.8</xstream.version>
		<spring-cache.version>3.5.0</spring-cache.version>
		<spymemcached-provider.version>3.2.0</spymemcached-provider.version>
		<logback.version>1.0.13</logback.version>
		<spring-data-redis.version>1.6.4.RELEASE</spring-data-redis.version>
		<jedis.version>2.8.0</jedis.version>
		<zookeeper.version>3.4.8</zookeeper.version>
		<zkclient.version>0.9</zkclient.version>
		<spring-security.version>3.2.9.RELEASE</spring-security.version>
		<dubbo.version>2.8.3.1</dubbo.version>
		<com.mchange.c3p0>0.9.5</com.mchange.c3p0>
		<org.mariadb.jdbc>1.5.2</org.mariadb.jdbc>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>

		<!-- 1.单元测试包 -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>${hamcrest.core.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.core.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- 2.spring相关jar包 -->
		<!-- 2.1确保所有的spring模块都使用统一的版本, 所有使用的spring模块dependency都不需要在声明version属性 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-framework-bom</artifactId>
			<version>${spring.version}</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>
		<!-- 2.2使用Spring AOP 则需要在项目中导入除了 -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectjweaver.version}</version>
		</dependency>
		<!-- 3.spring security 相关jar包 -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		<!--4.Reactor是一个轻量级的JVM基础库， 它可以帮助我们构建的服务和应用高效而异步的传递消息。 -->
		<dependency>
			<groupId>org.projectreactor</groupId>
			<artifactId>reactor-net</artifactId>
			<version>${org.projectreactor.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectreactor</groupId>
			<artifactId>reactor-core</artifactId>
			<version>${org.projectreactor.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectreactor</groupId>
			<artifactId>reactor-tcp</artifactId>
			<version>${reactor-tcp.version}</version>
		</dependency>
		<!-- 5.mybaits 相关jar包 -->
		<!-- 5.1 mybatis核心包 -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${mybatis.version}</version>
		</dependency>
		<!-- 5.2整合 MyBatis和 Spring 框架的类库 -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>${mybatis.spring.version}</version>
		</dependency>
		<!-- 6.数据源 -->
		<dependency>
			<groupId>com.mchange</groupId>
			<artifactId>c3p0</artifactId>
			<version>${com.mchange.c3p0}</version>
		</dependency>
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
			<version>${org.mariadb.jdbc}</version>
		</dependency>
		<!-- 7.quartz Quartz是一个完全由Java编写的开源作业调度框架， 为在Java应用程序中进行作业调度提供了简单却强大的机制 -->
		<!-- 7.1 Quart 框架核心包 -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>${quartz.version}</version>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz-jobs</artifactId>
			<version>${quartz.version}</version>
		</dependency>
		<!-- 8.commons -->
		<!-- 8.1跟java.lang这个包的作用类似， Commons Lang这一组API也是提供一些基础的、通用的操作和处理， 如自动生成toString()的结果、自动实现hashCode() 
			和equals()方法、数组操作、枚举、日期和时间的处理等等 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons.lang.version}</version>
		</dependency>
		<!-- 8.2Commons Configuration是一个java应用程序的配置管理工具。 可以从properties或者xml文件中加载软件的配置信息, 
			用来构建支撑软件运行的基础环境。 -->
		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
			<version>${commons.configuration.version}</version>
		</dependency>
		<!-- 8.3BeanUtils主要提供了对于JavaBean进行各种操作。 -->
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>${commons.beanutils.version}</version>
		</dependency>
		<!-- 8.4Apache Commons包中的一个，包含了一些Apache开发的集合类， 功能比java.util.*强大 -->
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>${commons.collections.version}</version>
		</dependency>
		<!-- 8.5 HttpClient 是 Apache Jakarta Common 下的子项目， 可以用来提供高效的、最新的、功能丰富的支持 
			HTTP 协议的客户端编程工具包， 并且它支持 HTTP 协议最新的版本和建议。 -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>${httpclient.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>${commons-httpclient.version}</version>
		</dependency>

		<!-- 9.poi 相关jar包 (EXCEL导入导出) -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>${poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>${poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml-schemas</artifactId>
			<version>${poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-excelant</artifactId>
			<version>${poi.version}</version>
		</dependency>
		<!-- 10.Json-lib可以将Java对象转成json格式的字符串， 也可以将Java对象转换成xml格式的文档， 同样可以将json字符串转换成Java对象或是将xml字符串转换成Java对象。 -->
		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>${json-lib.version}</version>
			<classifier>jdk15</classifier>
		</dependency>
		<!-- 11.一个Json处理工具包，包括“序列化”和“反序列化”两部分，它具备如下特征： 速度最快，测试表明，fastjson具有极快的性能，超越任其他的Java 
			Json parser,包括自称最快的JackJson; 功能强大，完全支持Java Bean、集合、Map、日期、Enum，支持范型，支持自省; 
			无依赖，能够直接运行在Java SE 5.0以上版本；支持Android；开源 (Apache 2.0) -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>${com.alibaba.version}</version>
		</dependency>
		<!-- 12.java对象和json相互转化 -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>${jackson-mapper.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson-core.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson-databind.version}</version>
		</dependency>
		<!-- 13.servlet相关（部分与JSP页面有关） -->
		<!-- 
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet.api.version}</version>
			<scope>provided</scope>
		</dependency>
		 -->
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>${javax.servlet.jsp-api.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${javax.servlet-api.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${javax.servlet.version}</version>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>${taglibs.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>${jsp.api.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- 14.xStream可以轻易的将Java对象和xml文档相互转换， 而且可以修改某个特定的属性和节点名称，而且也支持json的转换； -->
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>${xstream.version}</version>
		</dependency>
		<!-- 15.日志相关 -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<!-- 16.配置redis -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-redis</artifactId>
			<version>${spring-data-redis.version}</version>
		</dependency>
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>${jedis.version}</version>
		</dependency>
		<!-- 17.zookeeper -->
		<dependency>
			<groupId>com.101tec</groupId>
			<artifactId>zkclient</artifactId>
			<version>${zkclient.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-log4j12</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.zookeeper</groupId>
			<artifactId>zookeeper</artifactId>
			<version>${zookeeper.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-log4j12</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- 18 dubbo -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>dubbo</artifactId>
			<version>${dubbo.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>tomcat-embed-logging-juli</artifactId>
					<groupId>org.apache.tomcat.embed</groupId>
				</exclusion>
				<exclusion>
					<artifactId>tomcat-embed-core</artifactId>
					<groupId>org.apache.tomcat.embed</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jboss-servlet-api_3.1_spec</artifactId>
					<groupId>org.jboss.spec.javax.servlet</groupId>
				</exclusion>
				<exclusion>
					<artifactId>netty</artifactId>
					<groupId>io.netty</groupId>
				</exclusion>
				<exclusion>
					<artifactId>istack-commons-runtime</artifactId>
					<groupId>com.sun.istack</groupId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.xml.bind</groupId>
					<artifactId>jaxb-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.httpcomponents</groupId>
					<artifactId>httpclient</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.httpcomponents</groupId>
					<artifactId>httpcore</artifactId>
				</exclusion>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>
	
	<build>
		<finalName>demo</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<warSourceDirectory>src/main/webapp</warSourceDirectory>
					<attachClasses>true</attachClasses>
					<warName>demo</warName>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>
